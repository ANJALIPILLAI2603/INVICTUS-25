{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khushi\\\\Desktop\\\\INVICTUS-25\\\\frontend\\\\src\\\\components\\\\Chatbot\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { OpenAI } from \"openai\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const predefinedQuestions = [\"How do I search for research papers?\", \"Can I collaborate with other researchers?\", \"What is ResearchCollab?\"];\n  const openai = new OpenAI({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    dangerouslyAllowBrowser: true\n  });\n  const handleSend = async () => {\n    if (input.trim()) {\n      setIsLoading(true);\n      setMessages([...messages, {\n        text: input,\n        sender: \"user\"\n      }]);\n      try {\n        const response = await openai.chat.completions.create({\n          model: \"gpt-3.5-turbo\",\n          messages: [{\n            role: \"system\",\n            content: \"You are a helpful assistant for the ResearchCollab platform.\"\n          }, {\n            role: \"user\",\n            content: input\n          }]\n        });\n        const botResponse = response.choices[0].message.content;\n        setMessages([...messages, {\n          text: input,\n          sender: \"user\"\n        }, {\n          text: botResponse,\n          sender: \"bot\"\n        }]);\n      } catch (error) {\n        console.error(\"Error fetching response from OpenAI:\", error);\n        setMessages([...messages, {\n          text: input,\n          sender: \"user\"\n        }, {\n          text: \"Sorry, something went wrong. Please try again.\",\n          sender: \"bot\"\n        }]);\n      } finally {\n        setIsLoading(false);\n        setInput(\"\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ResearchBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMessages([]),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: \"Typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predefined-questions\",\n      children: predefinedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setInput(question),\n        children: question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"OjPvdQps2GsUGE4SUl5r1IcLShE=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","predefinedQuestions","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","handleSend","trim","text","sender","response","chat","completions","create","model","role","content","botResponse","choices","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","question","type","placeholder","value","onChange","e","target","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/Users/Khushi/Desktop/INVICTUS-25/frontend/src/components/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { OpenAI } from \"openai\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const predefinedQuestions = [\r\n    \"How do I search for research papers?\",\r\n    \"Can I collaborate with other researchers?\",\r\n    \"What is ResearchCollab?\",\r\n  ];\r\n\r\n  const openai = new OpenAI({\r\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\r\n    dangerouslyAllowBrowser: true,\r\n  });\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim()) {\r\n      setIsLoading(true);\r\n      setMessages([...messages, { text: input, sender: \"user\" }]);\r\n\r\n      try {\r\n        const response = await openai.chat.completions.create({\r\n          model: \"gpt-3.5-turbo\",\r\n          messages: [\r\n            { role: \"system\", content: \"You are a helpful assistant for the ResearchCollab platform.\" },\r\n            { role: \"user\", content: input },\r\n          ],\r\n        });\r\n\r\n        const botResponse = response.choices[0].message.content;\r\n        setMessages([...messages, { text: input, sender: \"user\" }, { text: botResponse, sender: \"bot\" }]);\r\n      } catch (error) {\r\n        console.error(\"Error fetching response from OpenAI:\", error);\r\n        setMessages([...messages, { text: input, sender: \"user\" }, { text: \"Sorry, something went wrong. Please try again.\", sender: \"bot\" }]);\r\n      } finally {\r\n        setIsLoading(false);\r\n        setInput(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chatbot-header\">\r\n        <h3>ResearchBot</h3>\r\n        <button onClick={() => setMessages([])}>Clear</button>\r\n      </div>\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.sender}`}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n        {isLoading && <div className=\"message bot\">Typing...</div>}\r\n      </div>\r\n      <div className=\"predefined-questions\">\r\n        {predefinedQuestions.map((question, index) => (\r\n          <button key={index} onClick={() => setInput(question)}>\r\n            {question}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatbot-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && handleSend()}\r\n        />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}